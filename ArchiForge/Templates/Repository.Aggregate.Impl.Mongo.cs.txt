using {{ProjectName}}.Application.Interfaces;
using {{ProjectName}}.Domain.Entities;
using MongoDB.Driver;
using System.Threading.Tasks;

namespace {{ProjectName}}.Infrastructure.Repositories
{
    public class {{EntityName}}Repository : I{{EntityName}}Repository
    {
        private readonly IMongoCollection<{{EntityName}}> _c;
        public {{EntityName}}Repository(IMongoDatabase db) { _c = db.GetCollection<{{EntityName}}>(""{{EntityName | lower}}s""); }

        public async Task<{{EntityName}}?> GetByIdAsync({{IdType}} id) => await _c.Find(x => x.Id == id).FirstOrDefaultAsync();
        public async Task AddAsync({{EntityName}} aggregate) => await _c.InsertOneAsync(aggregate);
        public async Task UpdateAsync({{EntityName}} aggregate) => await _c.ReplaceOneAsync(x => x.Id == aggregate.Id, aggregate);
    }
}
